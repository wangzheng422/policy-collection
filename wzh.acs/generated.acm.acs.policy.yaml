apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: placement-openshift-acs-clusters
  namespace: policies
spec:
  predicates:
  - requiredClusterSelector:
      labelSelector:
        matchExpressions:
        - key: vendor
          operator: In
          values:
          - OpenShift
        - key: local-cluster
          operator: NotIn
          values:
          - "true"
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: placement-openshift-acs-hub
  namespace: policies
spec:
  predicates:
  - requiredClusterSelector:
      labelSelector:
        matchExpressions:
        - key: local-cluster
          operator: In
          values:
          - "true"
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: binding-policy-openshift-acs-hub
  namespace: policies
placementRef:
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
  name: placement-openshift-acs-clusters
subjects:
- apiGroup: policy.open-cluster-management.io
  kind: PolicySet
  name: openshift-acs-clusters
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: binding-policy-openshift-acs-hub2
  namespace: policies
placementRef:
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
  name: placement-openshift-acs-hub
subjects:
- apiGroup: policy.open-cluster-management.io
  kind: PolicySet
  name: openshift-acs-hub
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-acs-central-ca-bundle
  namespace: policies
spec:
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: policy-acs-central-status
    namespace: policies
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: stackrox
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
              name: create-cluster-init
              namespace: stackrox
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: Role
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                argocd.argoproj.io/sync-wave: "1"
              name: create-cluster-init
              namespace: stackrox
            rules:
            - apiGroups:
              - ""
              resources:
              - secrets
              verbs:
              - get
              - list
              - create
              - patch
              - update
            - apiGroups:
              - platform.stackrox.io
              resources:
              - securedclusters
              verbs:
              - get
              - list
              - patch
              - update
            - apiGroups:
              - route.openshift.io
              resources:
              - routes
              verbs:
              - get
              - list
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle4
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: RoleBinding
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
              name: create-cluster-init
              namespace: stackrox
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: Role
              name: create-cluster-init
            subjects:
            - kind: ServiceAccount
              name: create-cluster-init
              namespace: stackrox
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle5
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                argocd.argoproj.io/sync-wave: "2"
              labels:
                init-bundle: central
              name: create-cluster-init-bundle-v2
              namespace: stackrox
            spec:
              template:
                metadata:
                  annotations:
                    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                  labels:
                    init-bundle: central
                spec:
                  containers:
                  - command:
                    - /bin/bash
                    - -c
                    - "#!/usr/bin/env bash\nif kubectl get secret/sensor-tls &> /dev/null;
                      then\n  echo \"cluster-init bundle has already been configured,
                      doing nothing\"\n  exit 0\nelse\n\n  # Wait for central to be
                      ready\n  attempt_counter=0\n  max_attempts=20\n  echo \"Waiting
                      for central to be available...\"\n  until $(curl -k --output
                      /dev/null --silent --head --fail https://central); do\n      if
                      [ ${attempt_counter} -eq ${max_attempts} ];then\n        echo
                      \"Max attempts reached\"\n        exit 1\n      fi\n\n      printf
                      '.'\n      attempt_counter=$(($attempt_counter+1))\n      echo
                      \"Made attempt $attempt_counter, waiting...\"\n      sleep 5\n
                      \ done\n\n  # attempt to create init-bundle\n  # on failure
                      attempt to delete the bundle\n  attempt_counter=0\n  max_attempts=5\n
                      \ echo \"Configuring cluster-init bundle\"\n  \n  # set the
                      bundle name to include todays date\n  bundle_name=local-cluster-$(date
                      '+%Y%m%d')\n  export DATA={\\\"name\\\":\\\"$bundle_name\\\"}\n
                      \ until (curl -k -o /tmp/bundle.json -X POST -u \"admin:$PASSWORD\"
                      -H \"Content-Type: application/json\" --data $DATA --fail https://central/v1/cluster-init/init-bundles);
                      do\n      if [ ${attempt_counter} -eq ${max_attempts} ];then\n
                      \       echo \"Max attempts to create bundle reached\"\n        exit
                      1\n      fi\n\n      echo \"Check to see if there is an existing
                      bundle that can be revoked\"\n      curl -o /tmp/find_bundle.json
                      \ -k -X GET -u \"admin:$PASSWORD\" -H \"Content-Type: application/json\"
                      https://central/v1/cluster-init/init-bundles\n      bundle_id=$(cat
                      /tmp/find_bundle.json | python -c \"import sys, json; result
                      = [x for x in json.load(sys.stdin)[\\\"items\\\"] if x[\\\"name\\\"]==\\\"$bundle_name\\\"];
                      print(result[0][\\\"id\\\"])\")\n\n      echo \"-------------------------\"\n
                      \     echo \"bundle name is $bundle_name bundle id $bundle_id\"\n
                      \     echo \"-------------------------\"\n\n      if [ \"${bundle_id}\"
                      != \"\" ];then\n      echo \"executing revoke command\"\n        export
                      REVOKE=\"{\\\"ids\\\":[\\\"$bundle_id\\\"],\\\"confirmImpactedClustersIds\\\":[]}\"\n
                      \       curl -k -X PATCH -u \"admin:$PASSWORD\" -H \"Content-Type:
                      application/json\" --data $REVOKE https://central/v1/cluster-init/init-bundles/revoke\n
                      \     fi\n\n      printf '.'\n      attempt_counter=$(($attempt_counter+1))\n
                      \     echo \"Made create bundle attempt $attempt_counter, waiting...\"\n
                      \     sleep 5\n  done\n\n  echo \"Bundle received\"\n\n  if
                      [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n      BASE='base64
                      -w 0'\n  elif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n      BASE='base64'\n
                      \ fi\n\n  echo \"Applying bundle\"\n  # No jq in container,
                      python to the rescue\n  cat /tmp/bundle.json | python3 -c \"import
                      sys, json; print(json.load(sys.stdin)['kubectlBundle'])\" |
                      ${BASE} -d | oc apply -f -\n  ACS_HOST=\"$(oc get route central
                      -o custom-columns=HOST:.spec.host --no-headers):443\"\n  oc
                      patch secret sensor-tls --type='json' -p=\"[{\\\"op\\\" : \\\"add\\\",
                      \\\"path\\\" : \\\"/data/acs-host\\\", \\\"value\\\" : \\\"$(echo
                      $ACS_HOST | ${BASE})\\\"}]\"\n  echo \"ACS Cluster init bundle
                      generated and applied\"\nfi\n"
                    env:
                    - name: PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: password
                          name: central-htpasswd
                    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
                    imagePullPolicy: Always
                    name: create-cluster-init-bundle
                  dnsPolicy: ClusterFirst
                  restartPolicy: Never
                  serviceAccount: create-cluster-init
                  serviceAccountName: create-cluster-init
                  terminationGracePeriodSeconds: 30
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle6
      spec:
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: batch/v1
            kind: Job
            metadata:
              name: create-cluster-init-bundle
              namespace: stackrox
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SC System and Communications Protection
    policy.open-cluster-management.io/controls: SC-8 Transmission Confidentiality
      and Integrity
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-acs-central-ca-bundle-expired
  namespace: policies
spec:
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: NonCompliant
    kind: Policy
    name: policy-acs-monitor-certs
    namespace: policies
  disabled: false
  policy-templates:
  - ignorePending: true
    objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle-expired
      spec:
        evaluationInterval:
          compliant: 1m
          noncompliant: 45s
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: sensor-tls
              namespace: stackrox
        remediationAction: enforce
        severity: medium
  - ignorePending: true
    objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle-expired2
      spec:
        evaluationInterval:
          compliant: 1m
          noncompliant: 45s
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: collector-tls
              namespace: stackrox
        remediationAction: enforce
        severity: medium
  - ignorePending: true
    objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle-expired3
      spec:
        evaluationInterval:
          compliant: 1m
          noncompliant: 45s
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: admission-control-tls
              namespace: stackrox
        remediationAction: enforce
        severity: medium
  - ignorePending: true
    objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-ca-bundle-expired4
      spec:
        evaluationInterval:
          compliant: 1m
          noncompliant: 45s
        object-templates:
        - complianceType: mustnothave
          objectDefinition:
            apiVersion: batch/v1
            kind: Job
            metadata:
              annotations:
                argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                argocd.argoproj.io/sync-wave: "2"
              labels:
                init-bundle: central
              name: create-cluster-init-bundle-v2
              namespace: stackrox
            spec:
              template:
                metadata:
                  annotations:
                    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                  labels:
                    init-bundle: central
                spec:
                  containers:
                  - command:
                    - /bin/bash
                    - -c
                    - "#!/usr/bin/env bash\nif kubectl get secret/sensor-tls &> /dev/null;
                      then\n  echo \"cluster-init bundle has already been configured,
                      doing nothing\"\n  exit 0\nelse\n\n  # Wait for central to be
                      ready\n  attempt_counter=0\n  max_attempts=20\n  echo \"Waiting
                      for central to be available...\"\n  until $(curl -k --output
                      /dev/null --silent --head --fail https://central); do\n      if
                      [ ${attempt_counter} -eq ${max_attempts} ];then\n        echo
                      \"Max attempts reached\"\n        exit 1\n      fi\n\n      printf
                      '.'\n      attempt_counter=$(($attempt_counter+1))\n      echo
                      \"Made attempt $attempt_counter, waiting...\"\n      sleep 5\n
                      \ done\n\n  # attempt to create init-bundle\n  # on failure
                      attempt to delete the bundle\n  attempt_counter=0\n  max_attempts=5\n
                      \ echo \"Configuring cluster-init bundle\"\n  \n  # set the
                      bundle name to include todays date\n  bundle_name=local-cluster-$(date
                      '+%Y%m%d')\n  export DATA={\\\"name\\\":\\\"$bundle_name\\\"}\n
                      \ until (curl -k -o /tmp/bundle.json -X POST -u \"admin:$PASSWORD\"
                      -H \"Content-Type: application/json\" --data $DATA --fail https://central/v1/cluster-init/init-bundles);
                      do\n      if [ ${attempt_counter} -eq ${max_attempts} ];then\n
                      \       echo \"Max attempts to create bundle reached\"\n        exit
                      1\n      fi\n\n      echo \"Check to see if there is an existing
                      bundle that can be revoked\"\n      curl -o /tmp/find_bundle.json
                      \ -k -X GET -u \"admin:$PASSWORD\" -H \"Content-Type: application/json\"
                      https://central/v1/cluster-init/init-bundles\n      bundle_id=$(cat
                      /tmp/find_bundle.json | python -c \"import sys, json; result
                      = [x for x in json.load(sys.stdin)[\\\"items\\\"] if x[\\\"name\\\"]==\\\"$bundle_name\\\"];
                      print(result[0][\\\"id\\\"])\")\n\n      echo \"-------------------------\"\n
                      \     echo \"bundle name is $bundle_name bundle id $bundle_id\"\n
                      \     echo \"-------------------------\"\n\n      if [ \"${bundle_id}\"
                      != \"\" ];then\n      echo \"executing revoke command\"\n        export
                      REVOKE=\"{\\\"ids\\\":[\\\"$bundle_id\\\"],\\\"confirmImpactedClustersIds\\\":[]}\"\n
                      \       curl -k -X PATCH -u \"admin:$PASSWORD\" -H \"Content-Type:
                      application/json\" --data $REVOKE https://central/v1/cluster-init/init-bundles/revoke\n
                      \     fi\n\n      printf '.'\n      attempt_counter=$(($attempt_counter+1))\n
                      \     echo \"Made create bundle attempt $attempt_counter, waiting...\"\n
                      \     sleep 5\n  done\n\n  echo \"Bundle received\"\n\n  if
                      [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n      BASE='base64
                      -w 0'\n  elif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n      BASE='base64'\n
                      \ fi\n\n  echo \"Applying bundle\"\n  # No jq in container,
                      python to the rescue\n  cat /tmp/bundle.json | python3 -c \"import
                      sys, json; print(json.load(sys.stdin)['kubectlBundle'])\" |
                      ${BASE} -d | oc apply -f -\n  ACS_HOST=\"$(oc get route central
                      -o custom-columns=HOST:.spec.host --no-headers):443\"\n  oc
                      patch secret sensor-tls --type='json' -p=\"[{\\\"op\\\" : \\\"add\\\",
                      \\\"path\\\" : \\\"/data/acs-host\\\", \\\"value\\\" : \\\"$(echo
                      $ACS_HOST | ${BASE})\\\"}]\"\n  echo \"ACS Cluster init bundle
                      generated and applied\"\nfi\n"
                    env:
                    - name: PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: password
                          name: central-htpasswd
                    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
                    imagePullPolicy: Always
                    name: create-cluster-init-bundle
                  dnsPolicy: ClusterFirst
                  restartPolicy: Never
                  serviceAccount: create-cluster-init
                  serviceAccountName: create-cluster-init
                  terminationGracePeriodSeconds: 30
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-acs-central-status
  namespace: policies
spec:
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: policy-acs-operator-central
    namespace: policies
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-central-status
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: central
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: central-db
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: scanner-db
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: scanner
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        remediationAction: inform
        severity: medium
  remediationAction: inform
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SC System and Communications Protection
    policy.open-cluster-management.io/controls: SC-8 Transmission Confidentiality
      and Integrity
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-acs-monitor-certs
  namespace: policies
spec:
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: policy-acs-central-ca-bundle
    namespace: policies
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: CertificatePolicy
      metadata:
        name: acs-bundle-certificates
      spec:
        minimumDuration: 720h
        namespaceSelector:
          include:
          - policies
        remediationAction: inform
        severity: high
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-monitor-certs
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: sensor-tls
              namespace: stackrox
        remediationAction: inform
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-monitor-certs2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: collector-tls
              namespace: stackrox
        remediationAction: inform
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-monitor-certs3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: admission-control-tls
              namespace: stackrox
        remediationAction: inform
        severity: medium
  remediationAction: inform
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SC System and Communications Protection
    policy.open-cluster-management.io/controls: SC-1 Policy and Procedures
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-acs-operator-central
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1beta1
      kind: OperatorPolicy
      metadata:
        name: operatorpolicy-rhacs-operator
      spec:
        complianceType: musthave
        operatorGroup:
          name: rhacs-operator-group
          namespace: rhacs-operator
        remediationAction: enforce
        severity: high
        subscription:
          channel: stable
          name: rhacs-operator
          namespace: rhacs-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
        upgradeApproval: Automatic
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-operator-central
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: stackrox
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: rhacs-operator
        - complianceType: musthave
          objectDefinition:
            apiVersion: platform.stackrox.io/v1alpha1
            kind: Central
            metadata:
              name: stackrox-central-services
              namespace: stackrox
            spec:
              central:
                exposure:
                  loadBalancer:
                    enabled: false
                    port: 443
                  nodePort:
                    enabled: false
                  route:
                    enabled: true
                persistence:
                  persistentVolumeClaim:
                    claimName: stackrox-db
              egress:
                connectivityPolicy: Online
              scanner:
                analyzer:
                  scaling:
                    autoScaling: Enabled
                    maxReplicas: 5
                    minReplicas: 2
                    replicas: 2
                scannerComponent: Enabled
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-acs-sync-resources
  namespace: policies
spec:
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: policy-acs-central-ca-bundle
    namespace: policies
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: platform.stackrox.io/v1alpha1
            kind: SecuredCluster
            metadata:
              name: stackrox-secured-cluster-services
              namespace: stackrox
            spec:
              admissionControl:
                listenOnCreates: false
                listenOnEvents: true
                listenOnUpdates: false
              auditLogs:
                collection: Auto
              centralEndpoint: |
                {{ fromSecret "stackrox" "sensor-tls" "acs-host" | base64dec }}
              clusterName: |
                {{ fromSecret "open-cluster-management-agent" "hub-kubeconfig-secret" "cluster-name" | base64dec }}
              perNode:
                collector:
                  collection: CORE_BPF
                  imageFlavor: Regular
                taintToleration: TolerateTaints
              scanner:
                scannerComponent: Disabled
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              admission-control-cert.pem: '{{ fromSecret "stackrox" "admission-control-tls"
                "admission-control-cert.pem" }}'
              admission-control-key.pem: '{{ fromSecret "stackrox" "admission-control-tls"
                "admission-control-key.pem" }}'
              ca.pem: '{{ fromSecret "stackrox" "admission-control-tls" "ca.pem" }}'
            kind: Secret
            metadata:
              labels:
                certificate_key_name: admission-control-cert.pem
              name: admission-control-tls
              namespace: policies
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              ca.pem: '{{ fromSecret "stackrox" "collector-tls" "ca.pem" }}'
              collector-cert.pem: '{{ fromSecret "stackrox" "collector-tls" "collector-cert.pem"
                }}'
              collector-key.pem: '{{ fromSecret "stackrox" "collector-tls" "collector-key.pem"
                }}'
            kind: Secret
            metadata:
              labels:
                certificate_key_name: collector-cert.pem
              name: collector-tls
              namespace: policies
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources4
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              acs-host: '{{ fromSecret "stackrox" "sensor-tls" "acs-host" }}'
              ca.pem: '{{ fromSecret "stackrox" "sensor-tls" "ca.pem" }}'
              sensor-cert.pem: '{{ fromSecret "stackrox" "sensor-tls" "sensor-cert.pem"
                }}'
              sensor-key.pem: '{{ fromSecret "stackrox" "sensor-tls" "sensor-key.pem"
                }}'
            kind: Secret
            metadata:
              labels:
                certificate_key_name: sensor-cert.pem
              name: sensor-tls
              namespace: policies
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-acs-sync-resources5
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: console.openshift.io/v1
            kind: ConsoleLink
            metadata:
              name: acs
            spec:
              applicationMenu:
                imageURL: https://upload.wikimedia.org/wikipedia/commons/3/3a/OpenShift-LogoType.svg
                section: Red Hat applications
              href: https://{{ (lookup "route.openshift.io/v1" "Route" "stackrox"
                "central").spec.host }}
              location: ApplicationMenu
              text: Red Hat Advanced Cluster Security for Kubernetes
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-advanced-managed-cluster-security
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: stackrox
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: rhacs-operator
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1beta1
      kind: OperatorPolicy
      metadata:
        name: operatorpolicy-rhacs-operator
      spec:
        complianceType: musthave
        operatorGroup:
          name: rhacs-operator-group
          namespace: rhacs-operator
        remediationAction: enforce
        severity: high
        subscription:
          channel: stable
          name: rhacs-operator
          namespace: rhacs-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
        upgradeApproval: Automatic
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              admission-control-cert.pem: '{{hub fromSecret "policies" "admission-control-tls"
                "admission-control-cert.pem" hub}}'
              admission-control-key.pem: '{{hub fromSecret "policies" "admission-control-tls"
                "admission-control-key.pem" hub}}'
              ca.pem: '{{hub fromSecret "policies" "admission-control-tls" "ca.pem"
                hub}}'
            kind: Secret
            metadata:
              name: admission-control-tls
              namespace: stackrox
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security4
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              ca.pem: '{{hub fromSecret "policies" "collector-tls" "ca.pem" hub}}'
              collector-cert.pem: '{{hub fromSecret "policies" "collector-tls" "collector-cert.pem"
                hub}}'
              collector-key.pem: '{{hub fromSecret "policies" "collector-tls" "collector-key.pem"
                hub}}'
            kind: Secret
            metadata:
              name: collector-tls
              namespace: stackrox
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security5
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              acs-host: '{{hub fromSecret "policies" "sensor-tls" "acs-host" hub}}'
              ca.pem: '{{hub fromSecret "policies" "sensor-tls" "ca.pem" hub}}'
              sensor-cert.pem: '{{hub fromSecret "policies" "sensor-tls" "sensor-cert.pem"
                hub}}'
              sensor-key.pem: '{{hub fromSecret "policies" "sensor-tls" "sensor-key.pem"
                hub}}'
            kind: Secret
            metadata:
              name: sensor-tls
              namespace: stackrox
            type: Opaque
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-security6
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: platform.stackrox.io/v1alpha1
            kind: SecuredCluster
            metadata:
              name: stackrox-secured-cluster-services
              namespace: stackrox
            spec:
              admissionControl:
                listenOnCreates: false
                listenOnEvents: true
                listenOnUpdates: false
              auditLogs:
                collection: Auto
              centralEndpoint: |
                {{ fromSecret "stackrox" "sensor-tls" "acs-host" | base64dec }}
              clusterName: |
                {{ fromSecret "open-cluster-management-agent" "hub-kubeconfig-secret" "cluster-name" | base64dec }}
              perNode:
                collector:
                  collection: CORE_BPF
                  imageFlavor: Regular
                taintToleration: TolerateTaints
        remediationAction: enforce
        severity: medium
  remediationAction: enforce
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    policy.open-cluster-management.io/categories: SI System and Information Integrity
    policy.open-cluster-management.io/controls: SI-5 Security Alerts Advisories and
      Directives
    policy.open-cluster-management.io/description: ""
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: policy-advanced-managed-cluster-status
  namespace: policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-advanced-managed-cluster-status
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: sensor
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              name: collector
              namespace: stackrox
            status:
              numberMisscheduled: 0
        - complianceType: musthave
          objectDefinition:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: admission-control
              namespace: stackrox
            status:
              conditions:
              - status: "True"
                type: Available
        remediationAction: inform
        severity: medium
  remediationAction: inform
---
apiVersion: policy.open-cluster-management.io/v1beta1
kind: PolicySet
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: openshift-acs-clusters
  namespace: policies
spec:
  description: The OpenShift Platform Plus policy set applies several policies that
    install the OpenShift Platform Plus products using best practices that allow them
    to work well together. This policy set is focused on the components that install
    to every managed cluster.
  policies:
  - policy-advanced-managed-cluster-security
  - policy-advanced-managed-cluster-status
---
apiVersion: policy.open-cluster-management.io/v1beta1
kind: PolicySet
metadata:
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
  labels:
    open-cluster-management.io/policy-set: openshift-acs
  name: openshift-acs-hub
  namespace: policies
spec:
  description: The OpenShift Platform Plus policy set applies several policies that
    will install the OpenShift Platform Plus products using best practices that allow
    them to work well together. This policy set is focused on the components that
    install to the Advanced Cluster Management hub.
  policies:
  - policy-acs-central-ca-bundle
  - policy-acs-central-ca-bundle-expired
  - policy-acs-central-status
  - policy-acs-monitor-certs
  - policy-acs-operator-central
  - policy-acs-sync-resources
  - policy-advanced-managed-cluster-status
